1 #!/bin/bash
2 
3 
4 if [[ "$1" == "--help" ]]; then
5     echo "Синтаксис: $0 [--help | --version] [-q|--quiet] [група] <вхідний_csv_файл>"
6     echo ""
7     echo "Опис:"
8     echo "  Скрипт для обробки CSV-розкладу з CIST (NURE) та"
9     echo "  формування файлу, придатного для імпорту в Google Calendar."
10     echo ""
11     echo "Параметри:"
12     echo "  --help        Показати цей текст та завершити виконання"
13     echo "  --version     Вивести версію скрипта"
14     echo "  -q, --quiet   Приглушити виведення в консоль"
15     echo "  група         Назва академічної групи (необов’язково)"
16     echo "  вхідний_csv_файл  Файл розкладу для обробки"
17     exit 0
18 fi
19 
20 if [[ "$1" == "--version" ]]; then
21     echo "Скрипт для експорту розкладу в Google Calendar — версія 1.0"
22     exit 0
23 fi
24 
25 
26 file="$1"
27 group="$2"
28 
29 if [ "$3" = "-q" -o "$3" = "--quiet" ]; then
30     output=/dev/null
31     shift
32 fi
33 
34 if [[ ! -f "$file" ]]; then
35     echo "ПОМИЛКА: файл '$file' не знайдено!" >&2
36     exit 1
37 fi
38 
39 temp_file=$(mktemp)
40 
41 if ! iconv -f UTF-8 -t UTF-8 "$file" >/dev/null 2>&1; then
42     temp_file=$(mktemp)
43     iconv -f WINDOWS-1251 -t UTF-8 "$file" > "$temp_file"
44     mv "$temp_file" "$file"
45 fi
46 
47 
48 awk -v RS='"' '
49 NR % 2 == 0 {
50     gsub(",", "|", $0);
51     
52     fields[++count] = $0;
53     
54     if (count == 13) {
55         for (i = 1; i <= 13; i++) {
56             printf "\"%s\"%s", fields[i], (i < 13 ? "," : "\n");
57         }
58         count = 0;
59     }
60 }
61 ' "$file" > fixed_file.csv
62 
63 
64 date=$(echo "$file" | grep -oE '[0-9]{2}_[0-9]{2}_20[0-9]{2}')
65 outFile="Google_TimeTable_${date}.csv"
66 
67 > "$outFile"
68 counter=1
69 
70 
71 if [[ -z "$group" ]]; then
72     groups=()
73     while IFS= read -r line; do
74         groups+=("$line")
75     done < <(grep -oE 'ПЗПІ-[0-9]+-[0-9]+' fixed_file.csv | sort -u)
76 
77     group_count=${#groups[@]}
78 
79 
80     if [[ "$group_count" -eq 1 ]]; then
81         group="${groups[0]}"
82         echo "Група не вказана, буде оброблено для групи: $group"
83     elif [[ "$group_count" -eq 0 ]]; then
84         echo "ПОМИЛКА: групу не знайдено у файлі '$file'!" >&2
85         exit 1
86     else
87         echo "Група не вказана, доступні групи:"
88         for g in "${groups[@]}"; do
89             echo " - $g"
90         done
91 
92         echo -n "Будь ласка, вкажіть групу! "
93         exit 1
94     fi
95 
96 fi
97 
98 
99 awk -F',' -v group="$group" -v outFile="$outFile" '
100 BEGIN {
101     print "Subject,Start Date,Start Time,End Time,Description" > outFile;
102     counter = 1;
103 }
104 {
105     for (i=1; i<=NF; i++) gsub(/"/, "", $i);
106 
107     if ($1 ~ /ПЗПІ-[0-9]+-[0-9]+/ && $1 ~ group) {
108         subject = $1;
109         desc = $12;
110 
111         split($2, d1, ".");
112         split($4, d2, ".");
113         start_date = sprintf("%02d/%02d/%04d", d1[2], d1[1], d1[3]);
114 
115         split($3, t1, ":");
116         split($5, t2, ":");
117 
118         ampm1 = (t1[1] >= 12) ? "PM" : "AM";
119         hour1 = t1[1] % 12; if (hour1 == 0) hour1 = 12;
120         start_time = sprintf("%02d:%02d %s", hour1, t1[2], ampm1);
121 
122         ampm2 = (t2[1] >= 12) ? "PM" : "AM";
123         hour2 = t2[1] % 12; if (hour2 == 0) hour2 = 12;
124         end_time = sprintf("%02d:%02d %s", hour2, t2[2], ampm2);
125 
126         split($12, description, " ");
127         if (description[2] == "Лб"){
128             counter += 0.5
129         }
130         else{
131             counter++;
132         }
133 
134         line = sprintf("\"%s #%d\",\"%s\",\"%s\",\"%s\",\"%s\"", subject, counter, start_date, start_time, end_time, desc);
135         print line >> outFile;
136         if (!quiet) print line;
137         
138     }
139 }
140 ' fixed_file.csv
141 
142 
143 echo -e "\nФайл збережено: $outFile"
144 
145 rm -f temp_group_file.csv
146 rm -f fixed_file.csv
