1 #!/bin/bash
2 
3 
4 if [[ "$1" == "--help" ]]; then
5     echo "Синтаксис: $0 [--help | --version] [-q|--quiet] <вхідний_csv_файл> [група]"
6     echo ""
7     echo "Опис:"
8     echo "  Скрипт для обробки CSV-розкладу з CIST (NURE) та"
9     echo "  формування файлу, придатного для імпорту в Google Calendar."
10     echo ""
11     echo "Параметри:"
12     echo "  --help        Показати цей текст та завершити виконання"
13     echo "  --version     Вивести версію скрипта"
14     echo "  -q, --quiet   Приглушити виведення в консоль"
15     echo "  група         Назва академічної групи (необов’язково)"
16     echo "  вхідний_csv_файл  Файл розкладу для обробки"
17     exit 0
18 fi
19 
20 if [[ "$1" == "--version" ]]; then
21     echo "Скрипт для експорту розкладу в Google Calendar — версія 1.0"
22     exit 0
23 fi
24 
25 quiet=0
26 if [[ "$1" == "-q" || "$1" == "--quiet" ]]; then
27     quiet=1
28     shift
29 fi
30 
31 file="$1"
32 group="$2"
33 
34 
35 if [[ ! -f "$file" ]]; then
36     echo "ПОМИЛКА: файл '$file' не знайдено!" >&2
37     exit 1
38 fi
39 
40 temp_file=$(mktemp)
41 
42 if ! iconv -f UTF-8 -t UTF-8 "$file" >/dev/null 2>&1; then
43     temp_file=$(mktemp)
44     iconv -f WINDOWS-1251 -t UTF-8 "$file" > "$temp_file"
45     mv "$temp_file" "$file"
46 fi
47 
48 
49 awk -v RS='"' '
50 NR % 2 == 0 {
51     gsub(",", "|", $0);
52     
53     fields[++count] = $0;
54     
55     if (count == 13) {
56         for (i = 1; i <= 13; i++) {
57             printf "\"%s\"%s", fields[i], (i < 13 ? "," : "\n");
58         }
59         count = 0;
60     }
61 }
62 ' "$file" > fixed_file.csv
63 
64 
65 date=$(echo "$file" | grep -oE '[0-9]{2}_[0-9]{2}_20[0-9]{2}')
66 outFile="Google_TimeTable_${date}.csv"
67 
68 > "$outFile"
69 counter=1
70 
71 
72 if [[ -z "$group" ]]; then
73     groups=()
74     while IFS= read -r line; do
75         groups+=("$line")
76     done < <(grep -oE 'ПЗПІ-[0-9]+-[0-9]+' fixed_file.csv | sort -u)
77 
78     group_count=${#groups[@]}
79 
80 
81     if [[ "$group_count" -eq 1 ]]; then
82         group="${groups[0]}"
83         echo "Група не вказана, буде оброблено для групи: $group"
84     elif [[ "$group_count" -eq 0 ]]; then
85         echo "ПОМИЛКА: групу не знайдено у файлі '$file'!" >&2
86         exit 1
87     else
88         echo "Група не вказана, доступні групи:"
89         for g in "${groups[@]}"; do
90             echo " - $g"
91         done
92 
93         echo -n "Будь ласка, вкажіть групу! "
94         exit 1
95     fi
96 
97 fi
98 
99 
100 awk -F',' -v group="$group" -v outFile="$outFile" -v quiet="$quiet" '
101 BEGIN {
102     print "Subject,Start Date,Start Time,End Time,Description" > outFile;
103     counter = 1;
104 }
105 {
106     for (i=1; i<=NF; i++) gsub(/"/, "", $i);
107 
108     if ($1 ~ /ПЗПІ-[0-9]+-[0-9]+/ && $1 ~ group) {
109         subject = $1;
110         desc = $12;
111 
112         split($2, d1, ".");
113         split($4, d2, ".");
114         start_date = sprintf("%02d/%02d/%04d", d1[2], d1[1], d1[3]);
115 
116         split($3, t1, ":");
117         split($5, t2, ":");
118 
119         ampm1 = (t1[1] >= 12) ? "PM" : "AM";
120         hour1 = t1[1] % 12; if (hour1 == 0) hour1 = 12;
121         start_time = sprintf("%02d:%02d %s", hour1, t1[2], ampm1);
122 
123         ampm2 = (t2[1] >= 12) ? "PM" : "AM";
124         hour2 = t2[1] % 12; if (hour2 == 0) hour2 = 12;
125         end_time = sprintf("%02d:%02d %s", hour2, t2[2], ampm2);
126 
127         split($12, description, " ");
128         if (description[2] == "Лб"){
129             counter += 0.5
130         }
131         else{
132             counter++;
133         }
134 
135         line = sprintf("\"%s #%d\",\"%s\",\"%s\",\"%s\",\"%s\"", subject, counter, start_date, start_time, end_time, desc);
136         print line >> outFile;
137         if (quiet == 0) print line;
138         
139     }
140 }
141 ' fixed_file.csv
142 
143 
144 echo -e "\nФайл збережено: $outFile"
145 
146 rm -f temp_group_file.csv
147 rm -f fixed_file.csv
